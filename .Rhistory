lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
ruta1 <- datos.sf
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
group_by(subruta) %>%
mutate(latitud = round(latitud, 4),
longitud = round(longitud, 4)) %>%
ungroup() %>%
unique()
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# group_by(subruta) %>%
# mutate(latitud = round(latitud, 4),
#        longitud = round(longitud, 4)) %>%
# ungroup() %>%
unique()
View(res2)
res2 %>%
mutate(longitud = scale(longitud, center = T, scale = T))
res2 %>%
mutate(longitud = scale(longitud, center = T, scale = T),
latitud = scale(latitud, center = T, scale = T))
res2 %>%
mutate(longitud = scale(longitud, center = T, scale = T),
latitud = scale(latitud, center = T, scale = T)) %>%
gather(var, val, -subruta) %>%
ggplot(aes(var, val)) +
geom_boxplot()
res2 %>%
mutate(longitud = scale(longitud, center = T, scale = T),
latitud = scale(latitud, center = T, scale = T)) %>%
gather(var, val, -subruta) %>%
ggplot(aes(var, val)) +
geom_boxplot()
res2 %>%
mutate(longitud = scale(longitud, center = T, scale = F),
latitud = scale(latitud, center = T, scale = F)) %>%
gather(var, val, -subruta) %>%
ggplot(aes(var, val)) +
geom_boxplot()
?round
round(1.434, 2)
round(1.434, 2.5)
round
getMethod('round')
.Primitive('round')
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
filter(runif(nrow(.) < 0.5))
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
filter(runif(nrow(.)) < 0.5)
set.seed(1234)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
filter(runif(nrow(.)) < 0.5) %>%
# group_by(subruta) %>%
# mutate(latitud = round(latitud, 4),
#        longitud = round(longitud, 4)) %>%
# ungroup() %>%
unique()
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
filter(runif(nrow(.)) < 0.1) %>%
# group_by(subruta) %>%
# mutate(latitud = round(latitud, 4),
#        longitud = round(longitud, 4)) %>%
# ungroup() %>%
unique()
ruta1 <- subset(datos.sf, ruta_corre == ruta & runif(2311) < 0.5)
ruta <- 'RUTA 20'
ruta1 <- subset(datos.sf, ruta_corre == ruta & runif(2311) < 0.5)
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
set.seed(1234)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
# group_by(subruta) %>%
# mutate(latitud = round(latitud, 4),
#        longitud = round(longitud, 4)) %>%
# ungroup() %>%
unique()
dat_g <- buildTopo(ruta1)
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
activate(nodes) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
importancias <- imps %>% as.data.frame() %>%
separate(name, c('latitud', 'longitud'), sep = ' ') %>%
mutate_at(vars(latitud, longitud), funs(as.numeric))
res2 %>%
ggplot(aes(latitud, longitud)) +
geom_path(aes(color = subruta), size = 1.3, alpha = 0.4) +
geom_point(data = importancias, aes(latitud, longitud, size = importancia)) +
coord_equal() +
theme_minimal() +
theme(panel.grid = element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.title = element_blank())
ruta1 <- subset(datos.sf, ruta_corre == ruta)
ruta1 <- subset(datos.sf, ruta_corre == ruta & runif(2311) < 0.5)
ruta1 %>% sizes
ruta1 %>% dim
ruta1 <- subset(datos.sf, ruta_corre == ruta)
ruta1 <- subset(datos.sf, ruta_corre == ruta & runif(2311) < 0.5)
ruta1 %>% dim
ruta <- 'RUTA 20'
ggsave('plot2.png', width = 20, height = 20, units = 'in')
ruta1 <- subset(datos.sf, ruta_corre == ruta)
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
set.seed(1234)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
# group_by(subruta) %>%
# mutate(latitud = round(latitud, 4),
#        longitud = round(longitud, 4)) %>%
# ungroup() %>%
unique()
dat_g <- buildTopo(ruta1)
imps <- dat_g %>% as_tbl_graph() %>%
# activate(edges) %>%
# mutate(weight = 1) %>%
activate(nodes) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
imps <- dat_g %>% as_tbl_graph() %>%
# activate(edges) %>%
# mutate(weight = 1) %>%
activate(nodes) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
# importamos los datos de las lineas de metro
datos <- read_excel("data/rutas-y-corredores-del-transporte-publico-concesionado.xlsx")
datos.sf <-
readOGR("data/prueba/rutas-y-corredores-del-transporte-publico-concesionado.shp")
plot(datos.sf)
ruta <- 'RUTA 20'
ruta1 <- subset(datos.sf, ruta_corre == ruta)
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
set.seed(1234)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
# group_by(subruta) %>%
# mutate(latitud = round(latitud, 4),
#        longitud = round(longitud, 4)) %>%
# ungroup() %>%
unique()
dat_g <- buildTopo(ruta1)
library('ggraph')
library('tidygraph')
imps <- dat_g %>% as_tbl_graph() %>%
# activate(edges) %>%
# mutate(weight = 1) %>%
activate(nodes) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
imps <- dat_g %>% as_tbl_graph() %>%
# activate(edges) %>%
# mutate(weight = 1) %>%
activate(nodes) %>%
mutate(importancia = centrality_closeness()) %>%
arrange(-importancia)
importancias <- imps %>% as.data.frame() %>%
separate(name, c('latitud', 'longitud'), sep = ' ') %>%
mutate_at(vars(latitud, longitud), funs(as.numeric)) %>%
mutate(latitud = round(latitud, 4),
longitud = round(longitud, 4)) %>%
group_by(latitud, longitud) %>%
summarise(importancia = mean(importancia)) %>%
ungroup()
imps
importancias <- imps %>% as.data.frame() %>%
separate(name, c('latitud', 'longitud'), sep = ' ') %>%
mutate_at(vars(latitud, longitud), funs(as.numeric))
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
activate(nodes) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
imps
imps %>% activate(edges)
imps %>% activate(edges) %>%
mutate(bla = runif)
imps %>% activate(edges) %>%
mutate(bla = runif(nrow(.)))
imps %>% activate(edges) %>%
mutate(bla = 1))
imps %>% activate(edges) %>%
mutate(bla = 1)
imps %>% activate(edges) %>%
mutate(bla = runif(5332))
imps %>% activate(edges) %>%
mutate(bla = runif(5328))
imps %>% activate(edges) %>%
mutate(bla = runif(length(.))))
imps %>% activate(edges) %>%
mutate(bla = runif(length(.)))
imps %>% activate(edges) %>%
mutate(bla = runif(nrow(.)))
imps %>% activate(edges) %>%
mutate(bla = runif(nrow))
imps %>% activate(edges) %>%
mutate(bla = runif(nrow()))
imps %>% activate(edges) %>%
mutate(bla = runif(nrow(.)))
imps %>% activate(edges) %>%
mutate(bla = runif(nrow(imps)))
nrow(imps)
length(imps)
imps %>% names
imps %>% attr
imps
imps %>% as.data.frame()
imps %>% activate(edges)
imps %>% activate(edges) %>% as.data.frame()
imps %>% activate(edges) %>% as.data.frame() %>% nrow
imps %>% activate(edges) %>%
mutate(bla = runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow))
imps %>% activate(edges) %>%
mutate(bla = runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 1)
imps %>% activate(edges) %>%
filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1)
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
importancias <- imps %>% as.data.frame() %>%
separate(name, c('latitud', 'longitud'), sep = ' ') %>%
mutate_at(vars(latitud, longitud), funs(as.numeric)) #%>%
res2 %>%
ggplot(aes(latitud, longitud)) +
geom_path(aes(color = subruta), size = 1.3, alpha = 0.4) +
geom_point(data = importancias, aes(latitud, longitud, size = importancia)) +
coord_equal() +
theme_minimal() +
theme(panel.grid = element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.title = element_blank())
imps
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
# filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
# filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
filter(runif(imps %>% activate(nodes) %>% as.data.frame() %>% nrow) < 0.1) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
importancias <- imps %>% as.data.frame() %>%
separate(name, c('latitud', 'longitud'), sep = ' ') %>%
mutate_at(vars(latitud, longitud), funs(as.numeric)) #%>%
res2 %>%
ggplot(aes(latitud, longitud)) +
geom_path(aes(color = subruta), size = 1.3, alpha = 0.4) +
geom_point(data = importancias, aes(latitud, longitud, size = importancia)) +
coord_equal() +
theme_minimal() +
theme(panel.grid = element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.title = element_blank())
ruta <- 'RUTA 1'
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
group_by(subruta) %>%
mutate(latitud = round(latitud, 4),
longitud = round(longitud, 4)) %>%
ungroup() %>%
unique()
mutate(latitud = round(latitud, 4),
longitud = round(longitud, 4)) #%>%
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
# filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
filter(runif(imps %>% activate(nodes) %>% as.data.frame() %>% nrow) < 0.1) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
importancias <- imps %>% as.data.frame() %>%
separate(name, c('latitud', 'longitud'), sep = ' ') %>%
mutate_at(vars(latitud, longitud), funs(as.numeric)) #%>%
dat_g <- buildTopo(ruta1)
library('ggraph')
library('tidygraph')
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
# filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
filter(runif(imps %>% activate(nodes) %>% as.data.frame() %>% nrow) < 0.1) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
ruta <- 'RUTA 1'
ruta1 <- subset(datos.sf, ruta_corre == ruta)
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
set.seed(1234)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
group_by(subruta) %>%
mutate(latitud = round(latitud, 4),
longitud = round(longitud, 4)) %>%
ungroup() %>%
unique()
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
# filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
filter(runif(imps %>% activate(nodes) %>% as.data.frame() %>% nrow) < 0.1) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
dat_g <- buildTopo(ruta1)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
group_by(subruta) %>%
mutate(latitud = round(latitud, 4),
longitud = round(longitud, 4)) %>%
ungroup() %>%
unique()
res2 %>% dim
res2 %>% select(-subruta) %>% unique() %>% dim
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
group_by(subruta) %>%
mutate(latitud = round(latitud, 3),
longitud = round(longitud, 3)) %>%
ungroup() %>%
unique()
res2 %>% select(-subruta) %>% unique() %>% dim
scales::unit_format(3.4})
scales::unit_format(3.4)
scales::unit_format(3.4, accuracy = 0.1)
unit_format(3.4, accuracy = 0.1)
scales::unit_format(3.4, accuracy = 0.1)
# cargamos el paquete RgoogleMaps
library('tidyverse')
library('RgoogleMaps')
library('readxl')
library('rgdal')
library('stplanr')
library('rjson')
library('ggmap')
# importamos los datos de las lineas de metro
datos <- read_excel("data/rutas-y-corredores-del-transporte-publico-concesionado.xlsx")
datos.sf <-
readOGR("data/prueba/rutas-y-corredores-del-transporte-publico-concesionado.shp")
ruta <- 'RUTA 1'
ruta1 <- subset(datos.sf, ruta_corre == ruta)
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
set.seed(1234)
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
group_by(subruta) %>%
mutate(latitud = round(latitud, 3),
longitud = round(longitud, 3)) %>%
ungroup() %>%
unique()
res2 %>% select(-subruta) %>% unique() %>% dim
res2$subruta %>% unique %>% length
res2 %>%
ggplot(aes(latitud, longitud)) +
geom_path(aes(color = subruta), size = 1.3, alpha = 0.4) +
geom_point(data = importancias, aes(latitud, longitud, size = importancia)) +
coord_equal() +
theme_minimal() +
theme(panel.grid = element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.title = element_blank())
require(rgeos)
require(igraph)
buildTopo <- function(lines){
g = gIntersection(lines,lines)
edges =
do.call(rbind,lapply(g@lines[[1]]@Lines,function(ls){as.vector(t(ls@coords))}))
lengths = sqrt((edges[,1]-edges[,3])^2+(edges[,2]-edges[,4])^2)
froms = paste(edges[,1],edges[,2])
tos = paste(edges[,3],edges[,4])
graph = graph.edgelist(cbind(froms,tos),directed=FALSE)
E(graph)$weight=lengths
return(graph)
}
dat_g <- buildTopo(ruta1)
library('ggraph')
library('tidygraph')
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
# filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
filter(runif(imps %>% activate(nodes) %>% as.data.frame() %>% nrow) < 0.1) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
imps <- dat_g %>% as_tbl_graph() %>%
activate(edges) %>%
mutate(weight = 1) %>%
# filter(runif(imps %>% activate(edges) %>% as.data.frame() %>% nrow) < 0.1) %>%
activate(nodes) %>%
# filter(runif(imps %>% activate(nodes) %>% as.data.frame() %>% nrow) < 0.1) %>%
mutate(importancia = centrality_betweenness()) %>%
arrange(-importancia)
importancias %>%
ggplot(aes(latitud, longitud)) +
geom_point() +
geom_path(data = res2, aes(latitud, longitud))
importancias <- imps %>% as.data.frame() %>%
separate(name, c('latitud', 'longitud'), sep = ' ') %>%
mutate_at(vars(latitud, longitud), funs(as.numeric)) #%>%
importancias %>%
ggplot(aes(latitud, longitud)) +
geom_point() +
geom_path(data = res2, aes(latitud, longitud))
importancias
res2 %>%
ggplot(aes(latitud, longitud)) +
geom_path(aes(color = subruta), size = 1.3, alpha = 0.4) +
geom_point(data = importancias, aes(latitud, longitud, size = importancia)) +
coord_equal() +
theme_minimal() +
theme(panel.grid = element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.title = element_blank())
plot(datos.sf)
ggsave('raw.png', width = 20, height = 20, units = 'in')
last_plot()
rawplot <- plot(datos.sf)
ggsave(plot = rawplot, 'raw.png', width = 20, height = 20, units = 'in')
ruta1 <- datos.sf
res <-
lapply(slot(ruta1, "lines"), function(x)
lapply(slot(x, "Lines"),
function(y)
slot(y, "coords")))
res2 <- bind_rows(lapply(res, as.data.frame), .id = 'subruta') %>%
rename(latitud = X1, longitud = X2) %>%
# filter(runif(nrow(.)) < 0.1) %>%
group_by(subruta) %>%
mutate(latitud = round(latitud, 3),
longitud = round(longitud, 3)) %>%
ungroup() %>%
unique()
res2 %>%
ggplot(aes(latitud, longitud)) +
geom_path(aes(color = subruta), size = 1.3, alpha = 0.4) +
# geom_point(data = importancias, aes(latitud, longitud, size = importancia)) +
coord_equal() +
theme_minimal() +
theme(panel.grid = element_blank(),
legend.position = 'none',
axis.text = element_blank(),
axis.title = element_blank())
ggsave('raw.png', width = 20, height = 20, units = 'in')
beepr::beep(2)
